{"remainingRequest":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/overlays/InfoWindow.vue","mtime":1639105456294},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js","mtime":1639105455772},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js","mtime":1639105455859}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjb21tb25NaXhpbiBmcm9tICcuLi9iYXNlL21peGlucy9jb21tb24uanMnCmltcG9ydCBiaW5kRXZlbnRzIGZyb20gJy4uL2Jhc2UvYmluZEV2ZW50LmpzJwppbXBvcnQge2NyZWF0ZVBvaW50LCBjcmVhdGVTaXplfSBmcm9tICcuLi9iYXNlL2ZhY3RvcnkuanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2JtLWluZm8td2luZG93JywKICBtaXhpbnM6IFtjb21tb25NaXhpbignb3ZlcmxheScpXSwKICBwcm9wczogewogICAgc2hvdzogewogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgcG9zaXRpb246IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgdHlwZTogTnVtYmVyCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIG1heFdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIG9mZnNldDogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICBtYXhpbWl6ZTogewogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgYXV0b1BhbjogewogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgY2xvc2VPbkNsaWNrOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBtZXNzYWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHNob3cgKHZhbCkgewogICAgICB2YWwgPyB0aGlzLm9wZW5JbmZvV2luZG93KCkgOiB0aGlzLmNsb3NlSW5mb1dpbmRvdygpCiAgICB9LAogICAgJ3Bvc2l0aW9uLmxuZycgKHZhbCwgb2xkVmFsKSB7CiAgICAgIHRoaXMucmVsb2FkKCkKICAgIH0sCiAgICAncG9zaXRpb24ubGF0JyAodmFsLCBvbGRWYWwpIHsKICAgICAgdGhpcy5yZWxvYWQoKQogICAgfSwKICAgICdvZmZzZXQud2lkdGgnICh2YWwsIG9sZFZhbCkgewogICAgICB0aGlzLnJlbG9hZCgpCiAgICB9LAogICAgJ29mZnNldC5oZWlnaHQnICh2YWwpIHsKICAgICAgdGhpcy5yZWxvYWQoKQogICAgfSwKICAgIG1heFdpZHRoICgpIHsKICAgICAgdGhpcy5yZWxvYWQoKQogICAgfSwKICAgIHdpZHRoICh2YWwpIHsKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZS5zZXRXaWR0aCh2YWwpCiAgICB9LAogICAgaGVpZ2h0ICh2YWwpIHsKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZS5zZXRIZWlnaHQodmFsKQogICAgfSwKICAgIHRpdGxlICh2YWwpIHsKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZS5zZXRUaXRsZSh2YWwpCiAgICB9LAogICAgbWF4aW1pemUgKHZhbCkgewogICAgICB2YWwgPyB0aGlzLm9yaWdpbkluc3RhbmNlLmVuYWJsZU1heGltaXplKCkgOiB0aGlzLm9yaWdpbkluc3RhbmNlLmRpc2FibGVNYXhpbWl6ZSgpCiAgICB9LAogICAgYXV0b1BhbiAodmFsKSB7CiAgICAgIHZhbCA/IHRoaXMub3JpZ2luSW5zdGFuY2UuZW5hYmxlQXV0b1BhbigpIDogdGhpcy5vcmlnaW5JbnN0YW5jZS5kaXNhYmxlQXV0b1BhbigpCiAgICB9LAogICAgY2xvc2VPbkNsaWNrICh2YWwpIHsKICAgICAgdmFsID8gdGhpcy5vcmlnaW5JbnN0YW5jZS5lbmFibGVDbG9zZU9uQ2xpY2soKSA6IHRoaXMub3JpZ2luSW5zdGFuY2UuZGlzYWJsZUNsb3NlT25DbGljaygpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWRyYXcgKCkgewogICAgICB0aGlzLm9yaWdpbkluc3RhbmNlLnJlZHJhdygpCiAgICB9LAogICAgbG9hZCAoKSB7CiAgICAgIGNvbnN0IHtCTWFwLCBtYXAsIHNob3csIHRpdGxlLCB3aWR0aCwgaGVpZ2h0LCBtYXhXaWR0aCwgb2Zmc2V0LCBhdXRvUGFuLCBjbG9zZU9uQ2xpY2ssIG1lc3NhZ2UsIG1heGltaXplLCBiaW5kT2JzZXJ2ZXIsICRwYXJlbnR9ID0gdGhpcwogICAgICBjb25zdCAkY29udGVudCA9IHRoaXMuJGVsCiAgICAgIGNvbnN0IG92ZXJsYXkgPSBuZXcgQk1hcC5JbmZvV2luZG93KCRjb250ZW50LCB7CiAgICAgICAgd2lkdGgsCiAgICAgICAgaGVpZ2h0LAogICAgICAgIHRpdGxlLAogICAgICAgIG1heFdpZHRoLAogICAgICAgIG9mZnNldDogY3JlYXRlU2l6ZShCTWFwLCBvZmZzZXQpLAogICAgICAgIGVuYWJsZUF1dG9QYW46IGF1dG9QYW4sCiAgICAgICAgZW5hYmxlQ2xvc2VPbkNsaWNrOiBjbG9zZU9uQ2xpY2ssCiAgICAgICAgZW5hYmxlTWVzc2FnZTogdHlwZW9mIG1lc3NhZ2UgPT09ICd1bmRlZmluZWQnLAogICAgICAgIG1lc3NhZ2UKICAgICAgfSkKCiAgICAgIG1heGltaXplID8gb3ZlcmxheS5lbmFibGVNYXhpbWl6ZSgpIDogb3ZlcmxheS5kaXNhYmxlTWF4aW1pemUoKQogICAgICBiaW5kRXZlbnRzLmNhbGwodGhpcywgb3ZlcmxheSkKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZSA9IG92ZXJsYXkKICAgICAgb3ZlcmxheS5yZWRyYXcoKQogICAgICA7W10uZm9yRWFjaC5jYWxsKCRjb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2ltZycpLCAkaW1nID0+IHsKICAgICAgICAkaW1nLm9ubG9hZCA9ICgpID0+IG92ZXJsYXkucmVkcmF3KCkKICAgICAgfSkKICAgICAgYmluZE9ic2VydmVyKCkKICAgICAgdGhpcy4kY29udGFpbmVyID0gJHBhcmVudC5vcmlnaW5JbnN0YW5jZSAmJiAkcGFyZW50Lm9yaWdpbkluc3RhbmNlLm9wZW5JbmZvV2luZG93ID8gJHBhcmVudC5vcmlnaW5JbnN0YW5jZSA6IG1hcAogICAgICBzaG93ICYmIHRoaXMub3BlbkluZm9XaW5kb3coKQogICAgfSwKICAgIGJpbmRPYnNlcnZlciAoKSB7CiAgICAgIGNvbnN0IE11dGF0aW9uT2JzZXJ2ZXIgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlcgogICAgICBpZiAoIU11dGF0aW9uT2JzZXJ2ZXIpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCB7JGVsLCBvcmlnaW5JbnN0YW5jZX0gPSB0aGlzCiAgICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihtdXRhdGlvbnMgPT4gb3JpZ2luSW5zdGFuY2UucmVkcmF3KCkpCiAgICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSgkZWwsIHthdHRyaWJ1dGVzOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUsIGNoYXJhY3RlckRhdGE6IHRydWUsIHN1YnRyZWU6IHRydWV9KQogICAgfSwKICAgIG9wZW5JbmZvV2luZG93ICgpIHsKICAgICAgY29uc3Qge0JNYXAsICRjb250YWluZXIsIHBvc2l0aW9uLCBvcmlnaW5JbnN0YW5jZX0gPSB0aGlzCiAgICAgICRjb250YWluZXIub3BlbkluZm9XaW5kb3cob3JpZ2luSW5zdGFuY2UsIGNyZWF0ZVBvaW50KEJNYXAsIHBvc2l0aW9uKSkKICAgIH0sCiAgICBjbG9zZUluZm9XaW5kb3cgKCkgewogICAgICB0aGlzLiRjb250YWluZXIuY2xvc2VJbmZvV2luZG93KHRoaXMub3JpZ2luSW5zdGFuY2UpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["InfoWindow.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InfoWindow.vue","sourceRoot":"node_modules/vue-baidu-map/components/overlays","sourcesContent":["<template>\n<div v-show=\"show\">\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint, createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-info-window',\n  mixins: [commonMixin('overlay')],\n  props: {\n    show: {\n      type: Boolean\n    },\n    position: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    width: {\n      type: Number\n    },\n    height: {\n      type: Number\n    },\n    maxWidth: {\n      type: Number\n    },\n    offset: {\n      type: Object\n    },\n    maximize: {\n      type: Boolean\n    },\n    autoPan: {\n      type: Boolean\n    },\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    message: {\n      type: String\n    }\n  },\n  watch: {\n    show (val) {\n      val ? this.openInfoWindow() : this.closeInfoWindow()\n    },\n    'position.lng' (val, oldVal) {\n      this.reload()\n    },\n    'position.lat' (val, oldVal) {\n      this.reload()\n    },\n    'offset.width' (val, oldVal) {\n      this.reload()\n    },\n    'offset.height' (val) {\n      this.reload()\n    },\n    maxWidth () {\n      this.reload()\n    },\n    width (val) {\n      this.originInstance.setWidth(val)\n    },\n    height (val) {\n      this.originInstance.setHeight(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    maximize (val) {\n      val ? this.originInstance.enableMaximize() : this.originInstance.disableMaximize()\n    },\n    autoPan (val) {\n      val ? this.originInstance.enableAutoPan() : this.originInstance.disableAutoPan()\n    },\n    closeOnClick (val) {\n      val ? this.originInstance.enableCloseOnClick() : this.originInstance.disableCloseOnClick()\n    }\n  },\n  methods: {\n    redraw () {\n      this.originInstance.redraw()\n    },\n    load () {\n      const {BMap, map, show, title, width, height, maxWidth, offset, autoPan, closeOnClick, message, maximize, bindObserver, $parent} = this\n      const $content = this.$el\n      const overlay = new BMap.InfoWindow($content, {\n        width,\n        height,\n        title,\n        maxWidth,\n        offset: createSize(BMap, offset),\n        enableAutoPan: autoPan,\n        enableCloseOnClick: closeOnClick,\n        enableMessage: typeof message === 'undefined',\n        message\n      })\n\n      maximize ? overlay.enableMaximize() : overlay.disableMaximize()\n      bindEvents.call(this, overlay)\n      this.originInstance = overlay\n      overlay.redraw()\n      ;[].forEach.call($content.querySelectorAll('img'), $img => {\n        $img.onload = () => overlay.redraw()\n      })\n      bindObserver()\n      this.$container = $parent.originInstance && $parent.originInstance.openInfoWindow ? $parent.originInstance : map\n      show && this.openInfoWindow()\n    },\n    bindObserver () {\n      const MutationObserver = global.MutationObserver\n      if (!MutationObserver) {\n        return\n      }\n      const {$el, originInstance} = this\n      this.observer = new MutationObserver(mutations => originInstance.redraw())\n      this.observer.observe($el, {attributes: true, childList: true, characterData: true, subtree: true})\n    },\n    openInfoWindow () {\n      const {BMap, $container, position, originInstance} = this\n      $container.openInfoWindow(originInstance, createPoint(BMap, position))\n    },\n    closeInfoWindow () {\n      this.$container.closeInfoWindow(this.originInstance)\n    }\n  }\n}\n</script>\n"]}]}