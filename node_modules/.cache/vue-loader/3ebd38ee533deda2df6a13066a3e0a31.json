{"remainingRequest":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/map/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/map/Map.vue","mtime":1639105456238},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js","mtime":1639105455772},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js","mtime":1639105455859}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"node_modules/vue-baidu-map/components/map","sourcesContent":["<template>\n<div>\n  <div v-if=\"!hasBmView\" ref=\"view\" style=\"width: 100%; height: 100%\">\n  </div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport bindEvents from '../base/bindEvent.js'\nimport {checkType} from '../base/util.js'\n\nexport default {\n  name: 'bm-map',\n  props: {\n    ak: {\n      type: String\n    },\n    center: {\n      type: [Object, String]\n    },\n    zoom: {\n      type: Number\n    },\n    minZoom: {\n      type: Number\n    },\n    maxZoom: {\n      type: Number\n    },\n    highResolution: {\n      type: Boolean,\n      default: true\n    },\n    mapClick: {\n      type: Boolean,\n      default: true\n    },\n    mapType: {\n      type: String\n    },\n    dragging: {\n      type: Boolean,\n      default: true\n    },\n    scrollWheelZoom: {\n      type: Boolean,\n      default: false\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: true\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    inertialDragging: {\n      type: Boolean,\n      default: true\n    },\n    continuousZoom: {\n      type: Boolean,\n      default: true\n    },\n    pinchToZoom: {\n      type: Boolean,\n      default: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: Array\n    },\n    mapStyle: {\n      type: Object\n    }\n  },\n  watch: {\n    center (val, oldVal) {\n      const {map, zoom} = this\n      if (checkType(val) === 'String' && val !== oldVal) {\n        map.centerAndZoom(val, zoom)\n      }\n    },\n    'center.lng' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        map.centerAndZoom(new BMap.Point(val, center.lat), zoom)\n      }\n    },\n    'center.lat' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        map.centerAndZoom(new BMap.Point(center.lng, val), zoom)\n      }\n    },\n    zoom (val, oldVal) {\n      const {map} = this\n      if (val !== oldVal && val >= 3 && val <= 19) {\n        map.setZoom(val)\n      }\n    },\n    minZoom (val) {\n      const {map} = this\n      map.setMinZoom(val)\n    },\n    maxZoom (val) {\n      const {map} = this\n      map.setMaxZoom(val)\n    },\n    highResolution () {\n      this.reset()\n    },\n    mapClick () {\n      this.reset()\n    },\n    mapType (val) {\n      const {map} = this\n      map.setMapType(global[val])\n    },\n    dragging (val) {\n      const {map} = this\n      val ? map.enableDragging() : map.disableDragging()\n    },\n    scrollWheelZoom (val) {\n      const {map} = this\n      val ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n    },\n    doubleClickZoom (val) {\n      const {map} = this\n      val ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n    },\n    keyboard (val) {\n      const {map} = this\n      val ? map.enableKeyboard() : map.disableKeyboard()\n    },\n    inertialDragging (val) {\n      const {map} = this\n      val ? map.enableInertialDragging() : map.disableInertialDragging()\n    },\n    continuousZoom (val) {\n      const {map} = this\n      val ? map.enableContinuousZoom() : map.disableContinuousZoom()\n    },\n    pinchToZoom (val) {\n      const {map} = this\n      val ? map.enablePinchToZoom() : map.disablePinchToZoom()\n    },\n    autoResize (val) {\n      const {map} = this\n      val ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    theme (val) {\n      const {map} = this\n      map.setMapStyle({styleJson: val})\n    },\n    'mapStyle.features': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {style, styleJson} = mapStyle\n        map.setMapStyle({\n          styleJson,\n          features: val,\n          style\n        })\n      },\n      deep: true\n    },\n    'mapStyle.style' (val, oldVal) {\n      const {map, mapStyle} = this\n      const {features, styleJson} = mapStyle\n      map.setMapStyle({\n        styleJson,\n        features,\n        style: val\n      })\n    },\n    'mapStyle.styleJson': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {features, style} = mapStyle\n        map.setMapStyle({\n          styleJson: val,\n          features,\n          style\n        })\n      },\n      deep: true\n    },\n    mapStyle (val) {\n      const {map, theme} = this\n      !theme && map.setMapStyle(val)\n    }\n  },\n  methods: {\n    setMapOptions () {\n      const {map, minZoom, maxZoom, mapType, dragging, scrollWheelZoom, doubleClickZoom, keyboard, inertialDragging, continuousZoom, pinchToZoom, autoResize} = this\n      minZoom && map.setMinZoom(minZoom)\n      maxZoom && map.setMaxZoom(maxZoom)\n      mapType && map.setMapType(global[mapType])\n      dragging ? map.enableDragging() : map.disableDragging()\n      scrollWheelZoom ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n      doubleClickZoom ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n      keyboard ? map.enableKeyboard() : map.disableKeyboard()\n      inertialDragging ? map.enableInertialDragging() : map.disableInertialDragging()\n      continuousZoom ? map.enableContinuousZoom() : map.disableContinuousZoom()\n      pinchToZoom ? map.enablePinchToZoom() : map.disablePinchToZoom()\n      autoResize ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    init (BMap) {\n      if (this.map) {\n        return\n      }\n      let $el = this.$refs.view\n      for (let $node of this.$slots.default || []) {\n        if ($node.componentOptions && $node.componentOptions.tag === 'bm-view') {\n          this.hasBmView = true\n          $el = $node.elm\n        }\n      }\n      const map = new BMap.Map($el, {enableHighResolution: this.highResolution, enableMapClick: this.mapClick})\n      this.map = map\n      const {setMapOptions, zoom, getCenterPoint, theme, mapStyle} = this\n      theme ? map.setMapStyle({styleJson: theme}) : map.setMapStyle(mapStyle)\n      setMapOptions()\n      bindEvents.call(this, map)\n      // 此处强行初始化一次地图 回避一个由于错误的 center 字符串导致初始化失败抛出的错误\n      map.reset()\n      map.centerAndZoom(getCenterPoint(), zoom)\n      this.$emit('ready', {BMap, map})\n      // Debug\n      // global.map = map\n      // global.mapComponent = this\n    },\n    getCenterPoint () {\n      const {center, BMap} = this\n      switch (checkType(center)) {\n        case 'String': return center\n        case 'Object': return new BMap.Point(center.lng, center.lat)\n        default: return new BMap.Point()\n      }\n    },\n    initMap (BMap) {\n      this.BMap = BMap\n      this.init(BMap)\n    },\n    getMapScript () {\n      if (!global.BMap) {\n        const ak = this.ak || this._BMap().ak\n        global.BMap = {}\n        global.BMap._preloader = new Promise((resolve, reject) => {\n          global._initBaiduMap = function () {\n            resolve(global.BMap)\n            global.document.body.removeChild($script)\n            global.BMap._preloader = null\n            global._initBaiduMap = null\n          }\n          const $script = document.createElement('script')\n          global.document.body.appendChild($script)\n          $script.src = `https://api.map.baidu.com/api?v=2.0&ak=${ak}&callback=_initBaiduMap`\n        })\n        return global.BMap._preloader\n      } else if (!global.BMap._preloader) {\n        return Promise.resolve(global.BMap)\n      } else {\n        return global.BMap._preloader\n      }\n    },\n    reset () {\n      const {getMapScript, initMap} = this\n      getMapScript()\n        .then(initMap)\n    }\n  },\n  mounted () {\n    this.reset()\n  },\n  data () {\n    return {\n      hasBmView: false\n    }\n  }\n}\n</script>\n"]}]}