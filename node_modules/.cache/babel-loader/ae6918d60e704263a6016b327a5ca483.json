{"remainingRequest":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/map/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/map/Map.vue","mtime":1639105456238},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js","mtime":1639105455772},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js","mtime":1639105455859}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div v-if=\"!hasBmView\" ref=\"view\" style=\"width: 100%; height: 100%\">\n  </div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport bindEvents from '../base/bindEvent.js'\nimport {checkType} from '../base/util.js'\n\nexport default {\n  name: 'bm-map',\n  props: {\n    ak: {\n      type: String\n    },\n    center: {\n      type: [Object, String]\n    },\n    zoom: {\n      type: Number\n    },\n    minZoom: {\n      type: Number\n    },\n    maxZoom: {\n      type: Number\n    },\n    highResolution: {\n      type: Boolean,\n      default: true\n    },\n    mapClick: {\n      type: Boolean,\n      default: true\n    },\n    mapType: {\n      type: String\n    },\n    dragging: {\n      type: Boolean,\n      default: true\n    },\n    scrollWheelZoom: {\n      type: Boolean,\n      default: false\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: true\n    },\n    keyboard: {\n      type: Boolean,\n      default: true\n    },\n    inertialDragging: {\n      type: Boolean,\n      default: true\n    },\n    continuousZoom: {\n      type: Boolean,\n      default: true\n    },\n    pinchToZoom: {\n      type: Boolean,\n      default: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: Array\n    },\n    mapStyle: {\n      type: Object\n    }\n  },\n  watch: {\n    center (val, oldVal) {\n      const {map, zoom} = this\n      if (checkType(val) === 'String' && val !== oldVal) {\n        map.centerAndZoom(val, zoom)\n      }\n    },\n    'center.lng' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        map.centerAndZoom(new BMap.Point(val, center.lat), zoom)\n      }\n    },\n    'center.lat' (val, oldVal) {\n      const {BMap, map, zoom, center} = this\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        map.centerAndZoom(new BMap.Point(center.lng, val), zoom)\n      }\n    },\n    zoom (val, oldVal) {\n      const {map} = this\n      if (val !== oldVal && val >= 3 && val <= 19) {\n        map.setZoom(val)\n      }\n    },\n    minZoom (val) {\n      const {map} = this\n      map.setMinZoom(val)\n    },\n    maxZoom (val) {\n      const {map} = this\n      map.setMaxZoom(val)\n    },\n    highResolution () {\n      this.reset()\n    },\n    mapClick () {\n      this.reset()\n    },\n    mapType (val) {\n      const {map} = this\n      map.setMapType(global[val])\n    },\n    dragging (val) {\n      const {map} = this\n      val ? map.enableDragging() : map.disableDragging()\n    },\n    scrollWheelZoom (val) {\n      const {map} = this\n      val ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n    },\n    doubleClickZoom (val) {\n      const {map} = this\n      val ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n    },\n    keyboard (val) {\n      const {map} = this\n      val ? map.enableKeyboard() : map.disableKeyboard()\n    },\n    inertialDragging (val) {\n      const {map} = this\n      val ? map.enableInertialDragging() : map.disableInertialDragging()\n    },\n    continuousZoom (val) {\n      const {map} = this\n      val ? map.enableContinuousZoom() : map.disableContinuousZoom()\n    },\n    pinchToZoom (val) {\n      const {map} = this\n      val ? map.enablePinchToZoom() : map.disablePinchToZoom()\n    },\n    autoResize (val) {\n      const {map} = this\n      val ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    theme (val) {\n      const {map} = this\n      map.setMapStyle({styleJson: val})\n    },\n    'mapStyle.features': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {style, styleJson} = mapStyle\n        map.setMapStyle({\n          styleJson,\n          features: val,\n          style\n        })\n      },\n      deep: true\n    },\n    'mapStyle.style' (val, oldVal) {\n      const {map, mapStyle} = this\n      const {features, styleJson} = mapStyle\n      map.setMapStyle({\n        styleJson,\n        features,\n        style: val\n      })\n    },\n    'mapStyle.styleJson': {\n      handler (val, oldVal) {\n        const {map, mapStyle} = this\n        const {features, style} = mapStyle\n        map.setMapStyle({\n          styleJson: val,\n          features,\n          style\n        })\n      },\n      deep: true\n    },\n    mapStyle (val) {\n      const {map, theme} = this\n      !theme && map.setMapStyle(val)\n    }\n  },\n  methods: {\n    setMapOptions () {\n      const {map, minZoom, maxZoom, mapType, dragging, scrollWheelZoom, doubleClickZoom, keyboard, inertialDragging, continuousZoom, pinchToZoom, autoResize} = this\n      minZoom && map.setMinZoom(minZoom)\n      maxZoom && map.setMaxZoom(maxZoom)\n      mapType && map.setMapType(global[mapType])\n      dragging ? map.enableDragging() : map.disableDragging()\n      scrollWheelZoom ? map.enableScrollWheelZoom() : map.disableScrollWheelZoom()\n      doubleClickZoom ? map.enableDoubleClickZoom() : map.disableDoubleClickZoom()\n      keyboard ? map.enableKeyboard() : map.disableKeyboard()\n      inertialDragging ? map.enableInertialDragging() : map.disableInertialDragging()\n      continuousZoom ? map.enableContinuousZoom() : map.disableContinuousZoom()\n      pinchToZoom ? map.enablePinchToZoom() : map.disablePinchToZoom()\n      autoResize ? map.enableAutoResize() : map.disableAutoResize()\n    },\n    init (BMap) {\n      if (this.map) {\n        return\n      }\n      let $el = this.$refs.view\n      for (let $node of this.$slots.default || []) {\n        if ($node.componentOptions && $node.componentOptions.tag === 'bm-view') {\n          this.hasBmView = true\n          $el = $node.elm\n        }\n      }\n      const map = new BMap.Map($el, {enableHighResolution: this.highResolution, enableMapClick: this.mapClick})\n      this.map = map\n      const {setMapOptions, zoom, getCenterPoint, theme, mapStyle} = this\n      theme ? map.setMapStyle({styleJson: theme}) : map.setMapStyle(mapStyle)\n      setMapOptions()\n      bindEvents.call(this, map)\n      // 此处强行初始化一次地图 回避一个由于错误的 center 字符串导致初始化失败抛出的错误\n      map.reset()\n      map.centerAndZoom(getCenterPoint(), zoom)\n      this.$emit('ready', {BMap, map})\n      // Debug\n      // global.map = map\n      // global.mapComponent = this\n    },\n    getCenterPoint () {\n      const {center, BMap} = this\n      switch (checkType(center)) {\n        case 'String': return center\n        case 'Object': return new BMap.Point(center.lng, center.lat)\n        default: return new BMap.Point()\n      }\n    },\n    initMap (BMap) {\n      this.BMap = BMap\n      this.init(BMap)\n    },\n    getMapScript () {\n      if (!global.BMap) {\n        const ak = this.ak || this._BMap().ak\n        global.BMap = {}\n        global.BMap._preloader = new Promise((resolve, reject) => {\n          global._initBaiduMap = function () {\n            resolve(global.BMap)\n            global.document.body.removeChild($script)\n            global.BMap._preloader = null\n            global._initBaiduMap = null\n          }\n          const $script = document.createElement('script')\n          global.document.body.appendChild($script)\n          $script.src = `https://api.map.baidu.com/api?v=2.0&ak=${ak}&callback=_initBaiduMap`\n        })\n        return global.BMap._preloader\n      } else if (!global.BMap._preloader) {\n        return Promise.resolve(global.BMap)\n      } else {\n        return global.BMap._preloader\n      }\n    },\n    reset () {\n      const {getMapScript, initMap} = this\n      getMapScript()\n        .then(initMap)\n    }\n  },\n  mounted () {\n    this.reset()\n  },\n  data () {\n    return {\n      hasBmView: false\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/map"}]}