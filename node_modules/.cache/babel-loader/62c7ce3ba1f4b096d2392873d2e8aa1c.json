{"remainingRequest":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/overlays/InfoWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-baidu-map/components/overlays/InfoWindow.vue","mtime":1639105456294},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/babel-loader/lib/index.js","mtime":1639105455772},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/cache-loader/dist/cjs.js","mtime":1639105455449},{"path":"/Users/huangweiji/Desktop/code/git_project/-Dragon-Boat-Festival/node_modules/vue-loader/lib/index.js","mtime":1639105455859}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgY29tbW9uTWl4aW4gZnJvbSAnLi4vYmFzZS9taXhpbnMvY29tbW9uLmpzJzsKaW1wb3J0IGJpbmRFdmVudHMgZnJvbSAnLi4vYmFzZS9iaW5kRXZlbnQuanMnOwppbXBvcnQgeyBjcmVhdGVQb2ludCwgY3JlYXRlU2l6ZSB9IGZyb20gJy4uL2Jhc2UvZmFjdG9yeS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYm0taW5mby13aW5kb3cnLAogIG1peGluczogW2NvbW1vbk1peGluKCdvdmVybGF5JyldLAogIHByb3BzOiB7CiAgICBzaG93OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICBwb3NpdGlvbjogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyCiAgICB9LAogICAgbWF4V2lkdGg6IHsKICAgICAgdHlwZTogTnVtYmVyCiAgICB9LAogICAgb2Zmc2V0OiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfSwKICAgIG1heGltaXplOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICBhdXRvUGFuOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICBjbG9zZU9uQ2xpY2s6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiB0cnVlCiAgICB9LAogICAgbWVzc2FnZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzaG93OiBmdW5jdGlvbiBzaG93KHZhbCkgewogICAgICB2YWwgPyB0aGlzLm9wZW5JbmZvV2luZG93KCkgOiB0aGlzLmNsb3NlSW5mb1dpbmRvdygpOwogICAgfSwKICAgICdwb3NpdGlvbi5sbmcnOiBmdW5jdGlvbiBwb3NpdGlvbkxuZyh2YWwsIG9sZFZhbCkgewogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfSwKICAgICdwb3NpdGlvbi5sYXQnOiBmdW5jdGlvbiBwb3NpdGlvbkxhdCh2YWwsIG9sZFZhbCkgewogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfSwKICAgICdvZmZzZXQud2lkdGgnOiBmdW5jdGlvbiBvZmZzZXRXaWR0aCh2YWwsIG9sZFZhbCkgewogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfSwKICAgICdvZmZzZXQuaGVpZ2h0JzogZnVuY3Rpb24gb2Zmc2V0SGVpZ2h0KHZhbCkgewogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfSwKICAgIG1heFdpZHRoOiBmdW5jdGlvbiBtYXhXaWR0aCgpIHsKICAgICAgdGhpcy5yZWxvYWQoKTsKICAgIH0sCiAgICB3aWR0aDogZnVuY3Rpb24gd2lkdGgodmFsKSB7CiAgICAgIHRoaXMub3JpZ2luSW5zdGFuY2Uuc2V0V2lkdGgodmFsKTsKICAgIH0sCiAgICBoZWlnaHQ6IGZ1bmN0aW9uIGhlaWdodCh2YWwpIHsKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZS5zZXRIZWlnaHQodmFsKTsKICAgIH0sCiAgICB0aXRsZTogZnVuY3Rpb24gdGl0bGUodmFsKSB7CiAgICAgIHRoaXMub3JpZ2luSW5zdGFuY2Uuc2V0VGl0bGUodmFsKTsKICAgIH0sCiAgICBtYXhpbWl6ZTogZnVuY3Rpb24gbWF4aW1pemUodmFsKSB7CiAgICAgIHZhbCA/IHRoaXMub3JpZ2luSW5zdGFuY2UuZW5hYmxlTWF4aW1pemUoKSA6IHRoaXMub3JpZ2luSW5zdGFuY2UuZGlzYWJsZU1heGltaXplKCk7CiAgICB9LAogICAgYXV0b1BhbjogZnVuY3Rpb24gYXV0b1Bhbih2YWwpIHsKICAgICAgdmFsID8gdGhpcy5vcmlnaW5JbnN0YW5jZS5lbmFibGVBdXRvUGFuKCkgOiB0aGlzLm9yaWdpbkluc3RhbmNlLmRpc2FibGVBdXRvUGFuKCk7CiAgICB9LAogICAgY2xvc2VPbkNsaWNrOiBmdW5jdGlvbiBjbG9zZU9uQ2xpY2sodmFsKSB7CiAgICAgIHZhbCA/IHRoaXMub3JpZ2luSW5zdGFuY2UuZW5hYmxlQ2xvc2VPbkNsaWNrKCkgOiB0aGlzLm9yaWdpbkluc3RhbmNlLmRpc2FibGVDbG9zZU9uQ2xpY2soKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHJlZHJhdzogZnVuY3Rpb24gcmVkcmF3KCkgewogICAgICB0aGlzLm9yaWdpbkluc3RhbmNlLnJlZHJhdygpOwogICAgfSwKICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHZhciBCTWFwID0gdGhpcy5CTWFwLAogICAgICAgICAgbWFwID0gdGhpcy5tYXAsCiAgICAgICAgICBzaG93ID0gdGhpcy5zaG93LAogICAgICAgICAgdGl0bGUgPSB0aGlzLnRpdGxlLAogICAgICAgICAgd2lkdGggPSB0aGlzLndpZHRoLAogICAgICAgICAgaGVpZ2h0ID0gdGhpcy5oZWlnaHQsCiAgICAgICAgICBtYXhXaWR0aCA9IHRoaXMubWF4V2lkdGgsCiAgICAgICAgICBvZmZzZXQgPSB0aGlzLm9mZnNldCwKICAgICAgICAgIGF1dG9QYW4gPSB0aGlzLmF1dG9QYW4sCiAgICAgICAgICBjbG9zZU9uQ2xpY2sgPSB0aGlzLmNsb3NlT25DbGljaywKICAgICAgICAgIG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2UsCiAgICAgICAgICBtYXhpbWl6ZSA9IHRoaXMubWF4aW1pemUsCiAgICAgICAgICBiaW5kT2JzZXJ2ZXIgPSB0aGlzLmJpbmRPYnNlcnZlciwKICAgICAgICAgICRwYXJlbnQgPSB0aGlzLiRwYXJlbnQ7CiAgICAgIHZhciAkY29udGVudCA9IHRoaXMuJGVsOwogICAgICB2YXIgb3ZlcmxheSA9IG5ldyBCTWFwLkluZm9XaW5kb3coJGNvbnRlbnQsIHsKICAgICAgICB3aWR0aDogd2lkdGgsCiAgICAgICAgaGVpZ2h0OiBoZWlnaHQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG1heFdpZHRoOiBtYXhXaWR0aCwKICAgICAgICBvZmZzZXQ6IGNyZWF0ZVNpemUoQk1hcCwgb2Zmc2V0KSwKICAgICAgICBlbmFibGVBdXRvUGFuOiBhdXRvUGFuLAogICAgICAgIGVuYWJsZUNsb3NlT25DbGljazogY2xvc2VPbkNsaWNrLAogICAgICAgIGVuYWJsZU1lc3NhZ2U6IHR5cGVvZiBtZXNzYWdlID09PSAndW5kZWZpbmVkJywKICAgICAgICBtZXNzYWdlOiBtZXNzYWdlCiAgICAgIH0pOwogICAgICBtYXhpbWl6ZSA/IG92ZXJsYXkuZW5hYmxlTWF4aW1pemUoKSA6IG92ZXJsYXkuZGlzYWJsZU1heGltaXplKCk7CiAgICAgIGJpbmRFdmVudHMuY2FsbCh0aGlzLCBvdmVybGF5KTsKICAgICAgdGhpcy5vcmlnaW5JbnN0YW5jZSA9IG92ZXJsYXk7CiAgICAgIG92ZXJsYXkucmVkcmF3KCk7CiAgICAgIFtdLmZvckVhY2guY2FsbCgkY29udGVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbWcnKSwgZnVuY3Rpb24gKCRpbWcpIHsKICAgICAgICAkaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBvdmVybGF5LnJlZHJhdygpOwogICAgICAgIH07CiAgICAgIH0pOwogICAgICBiaW5kT2JzZXJ2ZXIoKTsKICAgICAgdGhpcy4kY29udGFpbmVyID0gJHBhcmVudC5vcmlnaW5JbnN0YW5jZSAmJiAkcGFyZW50Lm9yaWdpbkluc3RhbmNlLm9wZW5JbmZvV2luZG93ID8gJHBhcmVudC5vcmlnaW5JbnN0YW5jZSA6IG1hcDsKICAgICAgc2hvdyAmJiB0aGlzLm9wZW5JbmZvV2luZG93KCk7CiAgICB9LAogICAgYmluZE9ic2VydmVyOiBmdW5jdGlvbiBiaW5kT2JzZXJ2ZXIoKSB7CiAgICAgIHZhciBNdXRhdGlvbk9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXI7CgogICAgICBpZiAoIU11dGF0aW9uT2JzZXJ2ZXIpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciAkZWwgPSB0aGlzLiRlbCwKICAgICAgICAgIG9yaWdpbkluc3RhbmNlID0gdGhpcy5vcmlnaW5JbnN0YW5jZTsKICAgICAgdGhpcy5vYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHsKICAgICAgICByZXR1cm4gb3JpZ2luSW5zdGFuY2UucmVkcmF3KCk7CiAgICAgIH0pOwogICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUoJGVsLCB7CiAgICAgICAgYXR0cmlidXRlczogdHJ1ZSwKICAgICAgICBjaGlsZExpc3Q6IHRydWUsCiAgICAgICAgY2hhcmFjdGVyRGF0YTogdHJ1ZSwKICAgICAgICBzdWJ0cmVlOiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIG9wZW5JbmZvV2luZG93OiBmdW5jdGlvbiBvcGVuSW5mb1dpbmRvdygpIHsKICAgICAgdmFyIEJNYXAgPSB0aGlzLkJNYXAsCiAgICAgICAgICAkY29udGFpbmVyID0gdGhpcy4kY29udGFpbmVyLAogICAgICAgICAgcG9zaXRpb24gPSB0aGlzLnBvc2l0aW9uLAogICAgICAgICAgb3JpZ2luSW5zdGFuY2UgPSB0aGlzLm9yaWdpbkluc3RhbmNlOwogICAgICAkY29udGFpbmVyLm9wZW5JbmZvV2luZG93KG9yaWdpbkluc3RhbmNlLCBjcmVhdGVQb2ludChCTWFwLCBwb3NpdGlvbikpOwogICAgfSwKICAgIGNsb3NlSW5mb1dpbmRvdzogZnVuY3Rpb24gY2xvc2VJbmZvV2luZG93KCkgewogICAgICB0aGlzLiRjb250YWluZXIuY2xvc2VJbmZvV2luZG93KHRoaXMub3JpZ2luSW5zdGFuY2UpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["InfoWindow.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div v-show=\"show\">\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createPoint, createSize} from '../base/factory.js'\n\nexport default {\n  name: 'bm-info-window',\n  mixins: [commonMixin('overlay')],\n  props: {\n    show: {\n      type: Boolean\n    },\n    position: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    width: {\n      type: Number\n    },\n    height: {\n      type: Number\n    },\n    maxWidth: {\n      type: Number\n    },\n    offset: {\n      type: Object\n    },\n    maximize: {\n      type: Boolean\n    },\n    autoPan: {\n      type: Boolean\n    },\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    message: {\n      type: String\n    }\n  },\n  watch: {\n    show (val) {\n      val ? this.openInfoWindow() : this.closeInfoWindow()\n    },\n    'position.lng' (val, oldVal) {\n      this.reload()\n    },\n    'position.lat' (val, oldVal) {\n      this.reload()\n    },\n    'offset.width' (val, oldVal) {\n      this.reload()\n    },\n    'offset.height' (val) {\n      this.reload()\n    },\n    maxWidth () {\n      this.reload()\n    },\n    width (val) {\n      this.originInstance.setWidth(val)\n    },\n    height (val) {\n      this.originInstance.setHeight(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    maximize (val) {\n      val ? this.originInstance.enableMaximize() : this.originInstance.disableMaximize()\n    },\n    autoPan (val) {\n      val ? this.originInstance.enableAutoPan() : this.originInstance.disableAutoPan()\n    },\n    closeOnClick (val) {\n      val ? this.originInstance.enableCloseOnClick() : this.originInstance.disableCloseOnClick()\n    }\n  },\n  methods: {\n    redraw () {\n      this.originInstance.redraw()\n    },\n    load () {\n      const {BMap, map, show, title, width, height, maxWidth, offset, autoPan, closeOnClick, message, maximize, bindObserver, $parent} = this\n      const $content = this.$el\n      const overlay = new BMap.InfoWindow($content, {\n        width,\n        height,\n        title,\n        maxWidth,\n        offset: createSize(BMap, offset),\n        enableAutoPan: autoPan,\n        enableCloseOnClick: closeOnClick,\n        enableMessage: typeof message === 'undefined',\n        message\n      })\n\n      maximize ? overlay.enableMaximize() : overlay.disableMaximize()\n      bindEvents.call(this, overlay)\n      this.originInstance = overlay\n      overlay.redraw()\n      ;[].forEach.call($content.querySelectorAll('img'), $img => {\n        $img.onload = () => overlay.redraw()\n      })\n      bindObserver()\n      this.$container = $parent.originInstance && $parent.originInstance.openInfoWindow ? $parent.originInstance : map\n      show && this.openInfoWindow()\n    },\n    bindObserver () {\n      const MutationObserver = global.MutationObserver\n      if (!MutationObserver) {\n        return\n      }\n      const {$el, originInstance} = this\n      this.observer = new MutationObserver(mutations => originInstance.redraw())\n      this.observer.observe($el, {attributes: true, childList: true, characterData: true, subtree: true})\n    },\n    openInfoWindow () {\n      const {BMap, $container, position, originInstance} = this\n      $container.openInfoWindow(originInstance, createPoint(BMap, position))\n    },\n    closeInfoWindow () {\n      this.$container.closeInfoWindow(this.originInstance)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-baidu-map/components/overlays"}]}